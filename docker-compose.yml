version: '3.1'

services:
    mongo1:
        image: mongo:3.6
        container_name: node1
        restart: always
        networks:
            mongo_network:
                ipv4_address: 172.21.0.11
        expose:
            - 27017
        ports:
            - 27011:27017
        entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

    mongo2:
        image: mongo:3.6
        container_name: node2
        restart: always
        networks:
            mongo_network:
                ipv4_address: 172.21.0.12
        expose:
            - 27017
        ports:
            - 27012:27017
        entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

    mongo3:
        image: mongo:3.6
        container_name: node3
        restart: always
        networks:
            mongo_network:
                ipv4_address: 172.21.0.13
        expose:
            - 27017
        ports:
            - 27013:27017
        entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

    hz1:
        image: hazelcast/hazelcast:3.12
        container_name: hz_node1
        restart: always
        networks:
            mongo_network:
                ipv4_address: 172.21.0.14
        expose:
            - 5701
        ports:
            - 5701:5701

    inventory:
        build:
            context: inventory
        image: djongo_app
        container_name: inventory_service
        restart: always
        expose:
            - 8000
        environment:
            DJANGO_SETTINGS_MODULE: inventory.settings
        ports:
            - 8000:8000
        networks:
            mongo_network:
                ipv4_address: 172.21.0.2
        depends_on:
            - mongo1
            - mongo2
            - mongo3

    ordering:
        build:
            context: ordering
        image: ordering_app
        container_name: ordering_service
        restart: always
        expose:
            - 8080
        ports:
            - 8003:8080
        links:
            - inventory
        networks:
            mongo_network:
                ipv4_address: 172.21.0.5
        depends_on:
            - hz1

    gateway:
        build:
            context: gateway
        image: gateway_app
        container_name: gateway_service
        restart: always
        expose:
            - 5000
        ports:
            - 8001:5000
        links:
            - inventory
        networks:
            mongo_network:
                ipv4_address: 172.21.0.3

    users:
        build:
            context: users
        image: users_app
        container_name: users_service
        restart: always
        expose:
            - 5000
        ports:
            - 8002:5000
        links:
            - inventory
            - gateway
        networks:
            mongo_network:
                ipv4_address: 172.21.0.4


    recommendations:
        build:
            context: recommendations
        image: recom_app
        container_name: recom_service
        restart: always
        expose:
            - 5000
        ports:
            - 8004:5000
        links:
            - inventory
            - gateway
        networks:
            mongo_network:
                ipv4_address: 172.21.0.6

    rabbitmq:
        image: 'rabbitmq:3.6-management-alpine'
        ports:
          - '5672:5672'
          - '15672:15672'



networks:
    mongo_network:
        ipam:
            driver: default
            config:
                - subnet: "172.21.0.0/24"
